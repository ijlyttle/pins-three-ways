---
engine: knitr
---

# Using Python

For this chapter, I will use Python via R's reticulate package.
All code blocks that do not use Python will have a comment at the top, just like this one which uses R:


```{r}
# r
library("reticulate")
use_virtualenv("renv/python/virtualenvs/renv-python-3.10")
```

```{python}
from pins import board_folder, board_urls
from pyarrow import feather
import pandas as pd
```

## Folder board

```{python}
board_here = board_folder("pins")
board_here.pin_list()
```

Should this be listing a test file?

### Read

```{python}
penguins_csv = board_here.pin_read("penguins-csv")
```

```{python}
penguins_csv
```


### Timeseries

```{python}
time_csv = board_here.pin_read("time-csv")
time_csv
time_csv.dtypes
```

We are not parsing dates or datetimes. We don't have the timezone.

There's no driver yet for JSON, so let's try Arrow:

```{python}
# this seems hacky, but I'm sure it will get sorted out
time_arrow = pd.read_feather(board_here.pin_read("time-arrow")[0])
```

```{python}
time_arrow
```

```{python}
time_arrow.dtypes
```

```{python}
time_arrow['date'].values
```

## Remote board

I don't think I will create a Python package; maybe I can just put together a quick script to convert a pins manafest into a dictionary.

```{python}
import requests
import yaml

# read file, parse into manifest
url_root = "https://ijlyttle.github.io/pins-three-ways/pins"
req = requests.get(f"{url_root}/_pins.yaml")
manifest = yaml.safe_load(req.text)
```

```{python}
# use the most-recent version
pin_paths = {}
for key, value in manifest.items():
    pin_paths[key] = max(value)
 
pin_paths   
```

The Python version has a board constructor `board_urls()`:

```{python}
board_remote = board_urls(url_root, pin_paths)
board_remote.pin_list()
```

### Read

We can read the CSV pin:

```{python}
board_remote.pin_read("penguins-csv")
```

```{python}
penguins_arrow = pd.read_feather(board_here.pin_read("penguins-arrow")[0])
penguins_arrow
penguins_arrow.dtypes
penguins_arrow['species'].values
```
